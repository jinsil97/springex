<?xml version="1.0" encoding="UTF-8"?>

<!--  root-context.xml : 일반적으로 스프링 프레임워크 이용시 사용하는 기본 설정 파일 -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://mybatis.org/schema/mybatis-spring
       http://mybatis.org/schema/mybatis-spring.xsd">

    <!-- context:component-scan : 패키지를 지정해서 해당 패키지내 클래스의 인스턴스들을
                                  스프링의 빈으로 등록하기 위해서 사용
                                  특정 어노테이션을 이용해서 스프링의 빈으로 관리될 객체를 표시-->

    <context:component-scan base-package="net.ict.springex.config"/>    <!--빈 등록-->

    <context:component-scan base-package="net.ict.springex.service"/>

   <!--  Java class를 web문서 형태로 만듦 -> XML 문서
         bean -> class / property -> setProperty
         개체1 hikariConfig
         개체2 dataSource
         -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mariadb://localhost:3305/webdb"></property>
        <property name="username" value="webuser"></property>
        <property name="password" value="webuser"></property>
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
            </props>
        </property>
    </bean>
                                             <!--   HikariDataSource : 저장소   -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml" />
    </bean>

    <mybatis:scan base-package="net.ict.springex.mapper"></mybatis:scan>

</beans>